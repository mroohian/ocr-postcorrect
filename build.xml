<?xml version="1.0" encoding="UTF-8"?>
<project name="archive" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/javazic.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/rhino.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/compilefontconfig.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/java-atk-wrapper.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/ext/icedtea-sound.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.groovy-1.8.6.classpath">
    <pathelement location="${basedir}/../../../../usr/share/java/groovy-1.8.6.jar"/>
  </path>
  
  <path id="library.hamcrest.classpath">
    <fileset dir="${basedir}/lib/hamcrest">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.junit4.classpath">
    <fileset dir="${basedir}/lib/junit4">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module LevDistCorpa -->
  
  <dirname property="module.levdistcorpa.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.levdistcorpa" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.levdistcorpa" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.levdistcorpa" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.levdistcorpa" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="levdistcorpa.output.dir" value="${module.levdistcorpa.basedir}/out/production/LevDistCorpa"/>
  <property name="levdistcorpa.testoutput.dir" value="${module.levdistcorpa.basedir}/out/test/LevDistCorpa"/>
  
  <path id="levdistcorpa.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="levdistcorpa.module.production.classpath">
    <path refid="${module.jdk.classpath.levdistcorpa}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="levdistcorpa.runtime.production.module.classpath">
    <pathelement location="${levdistcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="levdistcorpa.module.classpath">
    <path refid="${module.jdk.classpath.levdistcorpa}"/>
    <pathelement location="${levdistcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="levdistcorpa.runtime.module.classpath">
    <pathelement location="${levdistcorpa.testoutput.dir}"/>
    <pathelement location="${levdistcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.levdistcorpa">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.levdistcorpa">
    <patternset refid="excluded.from.module.levdistcorpa"/>
  </patternset>
  
  <path id="levdistcorpa.module.sourcepath">
    <dirset dir="${module.levdistcorpa.basedir}/Modules/LevDistCorpa">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="levdistcorpa.module.test.sourcepath">
    <dirset dir="${module.levdistcorpa.basedir}/Modules/LevDistCorpa">
      <include name="tests"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.levdistcorpa" depends="compile.module.levdistcorpa.production,compile.module.levdistcorpa.tests" description="Compile module LevDistCorpa"/>
  
  <target name="compile.module.levdistcorpa.production" description="Compile module LevDistCorpa; production classes">
    <mkdir dir="${levdistcorpa.output.dir}"/>
    <javac destdir="${levdistcorpa.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.levdistcorpa}/javac">
      <compilerarg line="${compiler.args.levdistcorpa}"/>
      <bootclasspath refid="levdistcorpa.module.bootclasspath"/>
      <classpath refid="levdistcorpa.module.production.classpath"/>
      <src refid="levdistcorpa.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.levdistcorpa"/>
    </javac>
    
    <copy todir="${levdistcorpa.output.dir}">
      <fileset dir="${module.levdistcorpa.basedir}/Modules/LevDistCorpa/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.levdistcorpa.tests" depends="compile.module.levdistcorpa.production" description="compile module LevDistCorpa; test classes" unless="skip.tests">
    <mkdir dir="${levdistcorpa.testoutput.dir}"/>
    <javac destdir="${levdistcorpa.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.levdistcorpa}/javac">
      <compilerarg line="${compiler.args.levdistcorpa}"/>
      <bootclasspath refid="levdistcorpa.module.bootclasspath"/>
      <classpath refid="levdistcorpa.module.classpath"/>
      <src refid="levdistcorpa.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.levdistcorpa"/>
    </javac>
    
    <copy todir="${levdistcorpa.testoutput.dir}">
      <fileset dir="${module.levdistcorpa.basedir}/Modules/LevDistCorpa/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.levdistcorpa" description="cleanup module">
    <delete dir="${levdistcorpa.output.dir}"/>
    <delete dir="${levdistcorpa.testoutput.dir}"/>
  </target>
  
  
  <!-- Module ocrCorpa -->
  
  <dirname property="module.ocrcorpa.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.ocrcorpa" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.ocrcorpa" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.ocrcorpa" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.ocrcorpa" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="ocrcorpa.output.dir" value="${module.ocrcorpa.basedir}/out/production/ocrCorpa"/>
  <property name="ocrcorpa.testoutput.dir" value="${module.ocrcorpa.basedir}/out/test/ocrCorpa"/>
  
  <path id="ocrcorpa.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="ocrcorpa.module.production.classpath">
    <path refid="${module.jdk.classpath.ocrcorpa}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="ocrcorpa.runtime.production.module.classpath">
    <pathelement location="${ocrcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="ocrcorpa.module.classpath">
    <path refid="${module.jdk.classpath.ocrcorpa}"/>
    <pathelement location="${ocrcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="ocrcorpa.runtime.module.classpath">
    <pathelement location="${ocrcorpa.testoutput.dir}"/>
    <pathelement location="${ocrcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.ocrcorpa">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.ocrcorpa">
    <patternset refid="excluded.from.module.ocrcorpa"/>
  </patternset>
  
  <path id="ocrcorpa.module.sourcepath">
    <dirset dir="${module.ocrcorpa.basedir}/Modules/ocrCorpa">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="ocrcorpa.module.test.sourcepath">
    <dirset dir="${module.ocrcorpa.basedir}/Modules/ocrCorpa">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.ocrcorpa" depends="compile.module.ocrcorpa.production,compile.module.ocrcorpa.tests" description="Compile module ocrCorpa"/>
  
  <target name="compile.module.ocrcorpa.production" description="Compile module ocrCorpa; production classes">
    <mkdir dir="${ocrcorpa.output.dir}"/>
    <javac destdir="${ocrcorpa.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.ocrcorpa}/javac">
      <compilerarg line="${compiler.args.ocrcorpa}"/>
      <bootclasspath refid="ocrcorpa.module.bootclasspath"/>
      <classpath refid="ocrcorpa.module.production.classpath"/>
      <src refid="ocrcorpa.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.ocrcorpa"/>
    </javac>
    
    <copy todir="${ocrcorpa.output.dir}">
      <fileset dir="${module.ocrcorpa.basedir}/Modules/ocrCorpa/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.ocrcorpa.tests" depends="compile.module.ocrcorpa.production" description="compile module ocrCorpa; test classes" unless="skip.tests">
    <mkdir dir="${ocrcorpa.testoutput.dir}"/>
    <javac destdir="${ocrcorpa.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.ocrcorpa}/javac">
      <compilerarg line="${compiler.args.ocrcorpa}"/>
      <bootclasspath refid="ocrcorpa.module.bootclasspath"/>
      <classpath refid="ocrcorpa.module.classpath"/>
      <src refid="ocrcorpa.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.ocrcorpa"/>
    </javac>
    
    <copy todir="${ocrcorpa.testoutput.dir}">
      <fileset dir="${module.ocrcorpa.basedir}/Modules/ocrCorpa/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.ocrcorpa" description="cleanup module">
    <delete dir="${ocrcorpa.output.dir}"/>
    <delete dir="${ocrcorpa.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Tess4J -->
  
  <dirname property="module.tess4j.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.tess4j" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.tess4j" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.tess4j" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.tess4j" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="tess4j.output.dir" value="${module.tess4j.basedir}/out/production/Tess4J"/>
  <property name="tess4j.testoutput.dir" value="${module.tess4j.basedir}/out/test/Tess4J"/>
  
  <path id="tess4j.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="tess4j.module.production.classpath">
    <path refid="${module.jdk.classpath.tess4j}"/>
    <pathelement location="${basedir}/lib/jna-dist/jna.jar"/>
    <pathelement location="${basedir}/lib/ghost-dist/ghost4j-0.5.1.jar"/>
    <pathelement location="${basedir}/Modules/Tess4J/lib/jai_imageio.jar"/>
  </path>
  
  <path id="tess4j.runtime.production.module.classpath">
    <pathelement location="${tess4j.output.dir}"/>
    <pathelement location="${basedir}/lib/jna-dist/jna.jar"/>
    <pathelement location="${basedir}/lib/ghost-dist/ghost4j-0.5.1.jar"/>
    <pathelement location="${basedir}/Modules/Tess4J/lib/jai_imageio.jar"/>
  </path>
  
  <path id="tess4j.module.classpath">
    <path refid="${module.jdk.classpath.tess4j}"/>
    <pathelement location="${tess4j.output.dir}"/>
    <pathelement location="${basedir}/lib/jna-dist/jna.jar"/>
    <pathelement location="${basedir}/lib/ghost-dist/ghost4j-0.5.1.jar"/>
    <pathelement location="${basedir}/Modules/Tess4J/lib/jai_imageio.jar"/>
  </path>
  
  <path id="tess4j.runtime.module.classpath">
    <pathelement location="${tess4j.testoutput.dir}"/>
    <pathelement location="${tess4j.output.dir}"/>
    <pathelement location="${basedir}/lib/jna-dist/jna.jar"/>
    <pathelement location="${basedir}/lib/ghost-dist/ghost4j-0.5.1.jar"/>
    <pathelement location="${basedir}/Modules/Tess4J/lib/jai_imageio.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.tess4j">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.tess4j">
    <patternset refid="excluded.from.module.tess4j"/>
  </patternset>
  
  <path id="tess4j.module.sourcepath">
    <dirset dir="${module.tess4j.basedir}/Modules/Tess4J">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.tess4j" depends="compile.module.tess4j.production,compile.module.tess4j.tests" description="Compile module Tess4J"/>
  
  <target name="compile.module.tess4j.production" description="Compile module Tess4J; production classes">
    <mkdir dir="${tess4j.output.dir}"/>
    <javac destdir="${tess4j.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.tess4j}/javac">
      <compilerarg line="${compiler.args.tess4j}"/>
      <bootclasspath refid="tess4j.module.bootclasspath"/>
      <classpath refid="tess4j.module.production.classpath"/>
      <src refid="tess4j.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.tess4j"/>
    </javac>
    
    <copy todir="${tess4j.output.dir}">
      <fileset dir="${module.tess4j.basedir}/Modules/Tess4J/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.tess4j.tests" depends="compile.module.tess4j.production" description="compile module Tess4J; test classes" unless="skip.tests"/>
  
  <target name="clean.module.tess4j" description="cleanup module">
    <delete dir="${tess4j.output.dir}"/>
    <delete dir="${tess4j.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Archive -->
  
  <dirname property="module.archive.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.archive" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.archive" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.archive" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.archive" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="archive.output.dir" value="${module.archive.basedir}/bin"/>
  <property name="archive.testoutput.dir" value="${module.archive.basedir}/bin"/>
  
  <path id="archive.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="archive.module.production.classpath">
    <path refid="${module.jdk.classpath.archive}"/>
    <pathelement location="${levdistcorpa.output.dir}"/>
    <pathelement location="${tess4j.output.dir}"/>
    <pathelement location="${basedir}/lib/orientdb-dist/blueprints-core-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/concurrentlinkedhashmap-lru-1.4.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-java-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/jna-platform-4.0.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/snappy-java-1.1.0.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-groovy-2.5.0.jar"/>
    <pathelement location="${basedir}/../../../../usr/share/java/commons-io.jar"/>
    <pathelement location="${basedir}/lib/junit-benchmarks-0.7.2/junit-benchmarks-0.7.2.jar"/>
    <pathelement location="${basedir}/lib/stanford-corenlp/stanford-corenlp-3.3.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orient-commons-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-core-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-client-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-graphdb-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/jdbm-2.4/jdbm-2.4.jar"/>
    <pathelement location="${ocrcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="archive.runtime.production.module.classpath">
    <pathelement location="${archive.output.dir}"/>
    <path refid="levdistcorpa.runtime.production.module.classpath"/>
    <path refid="tess4j.runtime.production.module.classpath"/>
    <pathelement location="${basedir}/lib/orientdb-dist/blueprints-core-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/concurrentlinkedhashmap-lru-1.4.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-java-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/jna-platform-4.0.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/snappy-java-1.1.0.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-groovy-2.5.0.jar"/>
    <pathelement location="${basedir}/../../../../usr/share/java/commons-io.jar"/>
    <pathelement location="${basedir}/lib/junit-benchmarks-0.7.2/junit-benchmarks-0.7.2.jar"/>
    <pathelement location="${basedir}/lib/stanford-corenlp/stanford-corenlp-3.3.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orient-commons-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-core-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-client-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-graphdb-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/jdbm-2.4/jdbm-2.4.jar"/>
    <path refid="ocrcorpa.runtime.production.module.classpath"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="archive.module.classpath">
    <pathelement location="${archive.output.dir}"/>
    <path refid="${module.jdk.classpath.archive}"/>
    <pathelement location="${levdistcorpa.testoutput.dir}"/>
    <pathelement location="${levdistcorpa.output.dir}"/>
    <pathelement location="${tess4j.testoutput.dir}"/>
    <pathelement location="${tess4j.output.dir}"/>
    <pathelement location="${basedir}/lib/orientdb-dist/blueprints-core-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/concurrentlinkedhashmap-lru-1.4.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-java-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/jna-platform-4.0.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/snappy-java-1.1.0.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-groovy-2.5.0.jar"/>
    <pathelement location="${basedir}/../../../../usr/share/java/commons-io.jar"/>
    <pathelement location="${basedir}/lib/junit-benchmarks-0.7.2/junit-benchmarks-0.7.2.jar"/>
    <pathelement location="${basedir}/lib/stanford-corenlp/stanford-corenlp-3.3.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orient-commons-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-core-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-client-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-graphdb-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/jdbm-2.4/jdbm-2.4.jar"/>
    <pathelement location="${ocrcorpa.testoutput.dir}"/>
    <pathelement location="${ocrcorpa.output.dir}"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  <path id="archive.runtime.module.classpath">
    <pathelement location="${archive.output.dir}"/>
    <path refid="levdistcorpa.runtime.module.classpath"/>
    <path refid="tess4j.runtime.module.classpath"/>
    <pathelement location="${basedir}/lib/orientdb-dist/blueprints-core-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/concurrentlinkedhashmap-lru-1.4.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-java-2.5.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/jna-platform-4.0.0.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/snappy-java-1.1.0.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/gremlin-groovy-2.5.0.jar"/>
    <pathelement location="${basedir}/../../../../usr/share/java/commons-io.jar"/>
    <pathelement location="${basedir}/lib/junit-benchmarks-0.7.2/junit-benchmarks-0.7.2.jar"/>
    <pathelement location="${basedir}/lib/stanford-corenlp/stanford-corenlp-3.3.1.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orient-commons-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-core-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-client-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/orientdb-dist/orientdb-graphdb-2.0-SNAPSHOT.jar"/>
    <pathelement location="${basedir}/lib/jdbm-2.4/jdbm-2.4.jar"/>
    <path refid="ocrcorpa.runtime.module.classpath"/>
    <path refid="library.groovy-1.8.6.classpath"/>
    <path refid="library.hamcrest.classpath"/>
    <path refid="library.junit4.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.archive">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.archive">
    <patternset refid="excluded.from.module.archive"/>
  </patternset>
  
  <path id="archive.module.sourcepath">
    <dirset dir="${module.archive.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="archive.module.test.sourcepath">
    <dirset dir="${module.archive.basedir}">
      <include name="tests"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.archive" depends="compile.module.archive.production,compile.module.archive.tests" description="Compile module Archive"/>
  
  <target name="compile.module.archive.production" depends="compile.module.levdistcorpa,compile.module.tess4j,compile.module.ocrcorpa" description="Compile module Archive; production classes">
    <mkdir dir="${archive.output.dir}"/>
    <javac destdir="${archive.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.archive}/javac">
      <compilerarg line="${compiler.args.archive}"/>
      <bootclasspath refid="archive.module.bootclasspath"/>
      <classpath refid="archive.module.production.classpath"/>
      <src refid="archive.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.archive"/>
    </javac>
    
    <copy todir="${archive.output.dir}">
      <fileset dir="${module.archive.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.archive.tests" depends="compile.module.archive.production" description="compile module Archive; test classes" unless="skip.tests">
    <mkdir dir="${archive.testoutput.dir}"/>
    <javac destdir="${archive.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.archive}/javac">
      <compilerarg line="${compiler.args.archive}"/>
      <bootclasspath refid="archive.module.bootclasspath"/>
      <classpath refid="archive.module.classpath"/>
      <src refid="archive.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.archive"/>
    </javac>
    
    <copy todir="${archive.testoutput.dir}">
      <fileset dir="${module.archive.basedir}/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.archive" description="cleanup module">
    <delete dir="${archive.output.dir}"/>
    <delete dir="${archive.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.levdistcorpa, clean.module.ocrcorpa, clean.module.tess4j, clean.module.archive" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.levdistcorpa, compile.module.ocrcorpa, compile.module.tess4j, compile.module.archive" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>